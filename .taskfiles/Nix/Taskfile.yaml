---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  NIX_DIR: "{{.ROOT_DIR}}/nix"
  NIX_RESOURCES_DIR: "{{.ROOT_DIR}}/.taskfiles/Nix/resources"

tasks:
  nas-install:
    desc: Install Nix on NAS
    prompt: This will destroy any production machine you point it to. Use only on freshly provisioned machines ... continue?
    summary: |
      ip: IP address of the new NAS machine
    dir: "{{.NIX_DIR}}"
    requires:
      vars: ["ip"]
    vars:
      ip: "{{.ip}}"
    cmds:
      - bash {{.NIX_RESOURCES_DIR}}/nas-install.sh {{.ip}}
  media-center-install:
    desc: Install Nix on media center machine
    prompt: This will destroy any production machine you point it to. Use only on freshly provisioned machines ... continue?
    summary: |
      ip: IP address of the new media-center machine
    dir: "{{.NIX_DIR}}"
    requires:
      vars: ["ip"]
    vars:
      ip: "{{.ip}}"
    cmds:
      - bash {{.NIX_RESOURCES_DIR}}/media-center-install.sh {{.ip}}
  rebuild:
    desc: Apply a nix configuration to a remote machine
    summary: |
      ip: IP address of the target machine
      hostname: Hostname of the target machine
    dir: "{{.NIX_DIR}}"
    requires:
      vars: ["ip", "hostname"]
    vars:
      ip: "{{.ip}}"
      hostname: "{{.hostname}}"
    cmds:
      - nixos-rebuild switch --flake .#{{.hostname}} --target-host root@{{.ip}} --verbose
